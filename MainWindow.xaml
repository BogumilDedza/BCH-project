<Window x:Class="BCH_PROJEKT.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:BCH_PROJEKT"
        xmlns:lvc="clr-namespace:LiveChartsCore.SkiaSharpView.WPF;assembly=LiveChartsCore.SkiaSharpView.WPF"
        mc:Ignorable="d"
        Title="BCH" Height="700" Width="800" Background="#2E2E2E">

   
    <!--Styling sheet-->
    <Window.Resources>

        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="#E0E0E0"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>

        <Style TargetType="Button">
    <Setter Property="Foreground" Value="#E0E0E0"/>
    <Setter Property="Background" Value="#4A4A4A"/>
    <Setter Property="BorderBrush" Value="#A0A0A0"/>
    <Setter Property="FontWeight" Value="SemiBold"/>
    <Setter Property="Padding" Value="6,2"/>
    <Setter Property="Margin" Value="5"/>
    <Setter Property="Cursor" Value="Hand"/>
    <Setter Property="Template">
        <Setter.Value>
            <ControlTemplate TargetType="Button">
                <Border 
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="1"
                    CornerRadius="1"
                    Padding="{TemplateBinding Padding}">
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#DE004A"/>
                        <Setter Property="Foreground" Value="White"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Setter.Value>
    </Setter>
</Style>

        <Style TargetType="TextBox">
            <Setter Property="Foreground" Value="#1E1E1E"/>
            <Setter Property="Background" Value="#D0D0D0"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontWeight" Value="14"/>
        </Style>

        <Style TargetType="Border">

            <Setter Property="Background" Value="#3A3A3A"/>
            <Setter Property="BorderBrush" Value="#A0A0A0"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="CornerRadius" Value="12"/>
            <Setter Property="Padding" Value="10"/>

            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="Black" BlurRadius="10" ShadowDepth="2" Opacity="0.5"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Margin" Value="10"/>
        </Style>

        <Style TargetType="TabControl">
            <Setter Property="Background" Value="#3A3A3A"/>
            <Setter Property="BorderBrush" Value="#A0A0A0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="#E0E0E0"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Padding" Value="5"/>
        </Style>

        <!-- Styl dla TabItem -->
        <Style TargetType="TabItem">
            <Setter Property="Background" Value="#4A4A4A"/>
            <Setter Property="Foreground" Value="#E0E0E0"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="BorderBrush" Value="#A0A0A0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border 
                    Name="Border"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="1,1,1,1"
                    Padding="8"
                    >
                            <ContentPresenter 
                        x:Name="ContentSite"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        ContentSource="Header"
                        RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#DE004A"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="#FF80A0"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="ComboBox">
            <Setter Property="Foreground" Value="#E0E0E0"/>
            <Setter Property="Background" Value="#4A4A4A"/>
            <Setter Property="BorderBrush" Value="#A0A0A0"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="5,2"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton 
                        Name="ToggleButton"
                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                        Focusable="false"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Foreground="{TemplateBinding Foreground}">
                                <ContentPresenter
                            Margin="5"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            Content="{TemplateBinding SelectionBoxItem}" />
                            </ToggleButton>

                            <Popup 
                        Name="Popup"
                        Placement="Bottom"
                        IsOpen="{TemplateBinding IsDropDownOpen}"
                        AllowsTransparency="True"
                        Focusable="False"
                        PopupAnimation="Slide">
                                <Border 
                            Background="#4A4A4A"
                            BorderBrush="#A0A0A0"
                            BorderThickness="1"
                            SnapsToDevicePixels="True">
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" />
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ToggleButton" Property="Background" Value="#DE004A"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    



    <Grid Margin="2">

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
       
            <Grid Grid.Column="0" Width="400">
             <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

            <!--Connection status idicatorr-->
            <Border Grid.Row="0" Margin="0,0,0,20">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <TextBlock Text="Connection Status:" Margin="5,0,5,0" VerticalAlignment="Center"/>
                        <Ellipse x:Name="ConnectionStatusDot"
                        Width="16" Height="16"
                        Fill="Red"
                        Stroke="Black"
                        StrokeThickness="1"
                        VerticalAlignment="Center"/>
                    <ComboBox x:Name="PortsComboBox"    SelectionChanged="PortsComboBox_SelectionChanged" Width="50" Margin="5"/>
                    <Button Content="Connect" Click="ConnectButton_Click" Margin="5" Width="60"/>
                    <Button Name="RefreshPortsButton" Content="Refresh" Click="RefreshPortsButton_Click" Width="60"/>
                        
                </StackPanel>
                </Border>
            <!--send data and recive data-->
            <Border Grid.Row="1" Margin="0,0,0,20">
                <StackPanel >
                  
                    
                    
                    <TextBox x:Name="Box" Width="300" Height="30"/>
                    <TextBox Name="RecivedTextBox" Width="300" Height="30" IsReadOnly="True" />
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" >
                        <Button Content="Send command" Width="100" Click="SendCommandButton_Click" />
                        <Button Content="Reset command" Width="100" Click="ResetCommandButton_Click"/>
                    </StackPanel>
                    
                </StackPanel>
            </Border>
            <!--settings about bch-->
            <Border Grid.Row="2" Margin="0,0,0,20">
                <StackPanel Orientation="Vertical">

                    <StackPanel Orientation="Horizontal" >
                        <TextBlock Text="BCH CODING" VerticalAlignment="Center" Margin="0,0,50,0"/>
                        <Button x:Name="BchYesButton" Content="YES" Width="50"  HorizontalAlignment="Left" Click="BchYesButton_Click"/>
                        <Button x:Name="BchNoButton" Content="NO" Width="50" HorizontalAlignment="Right" Click="BchNoButton_Click"/>
                    </StackPanel>
                    <Border Margin="0,10,0,0">
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <TextBlock Text="TYPE OF CODING" VerticalAlignment="Center"/>
                            <Button x:Name="FastButton" Content="FAST" Width="60" Click="FastButton_Click"/>
                            <Button x:Name="SlowButton" Content="SLOW" Width="60" Click="SlowButton_Click"/>
                        </StackPanel>
                    </Border>
                </StackPanel>
            </Border>
            <!--Setting about errors-->
            <Border Grid.Row="3" Margin="0,0,0,20">
                <StackPanel Orientation="Vertical">
                    <TextBlock Text="GENERATING RANDOM NOISE " Margin="0,0,0,10"/>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <Button x:Name="NoiseYesButton" Content="YES" Width="60" Click="NoiseYesButton_Click"/>
                        <Button x:Name="NoiseNoButton" Content="NO" Width="60" Click="NoiseNoButton_Click"/>
                    </StackPanel>

                    <StackPanel Name="Option" Margin="0,10,0,0" Visibility="Visible">
                        <Button Name="GaussianNoiseButton" Content="GAUSIN NOISE" Width="250" Click="GaussianNoiseButton_Click" />
                        <Button Name="BitErrorGeneratorButton" Content="BIT ERROR GENERATOR" Width="250" Click="BitErrorGeneratorButton_Click" />

                        <StackPanel Name="GaussianOptionsPanel" Orientation="Horizontal"  Margin="0,10,0,0" VerticalAlignment="Center" Visibility="Collapsed">
                            <TextBlock Text="Density" VerticalAlignment="Center" Foreground="#E0E0E0" Margin="5"/>
                            <Slider Name="DensitySlider" Minimum="0" Maximum="100" Width="200" Margin="5" />
                            <TextBlock Foreground="#E0E0E0" VerticalAlignment="Center" Margin="5"
                             Text="{Binding ElementName=DensitySlider, Path=Value, StringFormat={}{0:0}}" />
                        </StackPanel>

                        <StackPanel Name="BitErrorOptionsPanel" Orientation="Horizontal"  Margin="0,10,0,0" VerticalAlignment="Center" Visibility="Collapsed">
                            <TextBlock Text="Bit Error" VerticalAlignment="Center" Foreground="#E0E0E0" Margin="5"/>
                            <Slider Name="BitErrorSlider" Minimum="0" Maximum="7" Width="200" Margin="5" />
                            <TextBlock Foreground="#E0E0E0" VerticalAlignment="Center" Margin="5"
                            Text="{Binding ElementName=BitErrorSlider, Path=Value, StringFormat={}{0:0}}" />
                        </StackPanel>
                    </StackPanel>

                  </StackPanel>
                </Border>
             </Grid>

        <!--Chart section-->
        <Grid Grid.Column="1" Margin="30">

            <TabControl Grid.Row="0"
                Background="#3A3A3A"
        BorderBrush="#A0A0A0"
        BorderThickness="1"
        Margin="10"
        Foreground="#E0E0E0"
        FontWeight="Bold"
        HorizontalAlignment="Stretch"
        VerticalAlignment="Stretch">

                <TabItem Header="Sent and recived data" Padding="10">
                    <Grid Background="#3A3A3A" Margin="5" >
                        <lvc:CartesianChart
                         Series="{Binding Series}"
                         YAxes="{Binding YAxes}"
                         XAxes="{Binding XAxes}"
                         ZoomMode="None"
                         LegendPosition="Top"
                         Background="White"
                         Foreground="#1E1E1E"/>
                     </Grid>
                </TabItem>

               
                <TabItem Header="BER " Padding="10">
                    <Grid Background="#3A3A3A" Margin="5" >
                        <lvc:CartesianChart
                        Series="{Binding BERSeries}"
                        YAxes="{Binding BERYAxes}"
                        XAxes="{Binding BERXAxes}"
                        ZoomMode="None"
                        LegendPosition="Top"
                        Background="White"
                        Foreground="#1E1E1E"/>
                    </Grid>
                </TabItem>

                    
               
            </TabControl>

        </Grid>

    </Grid>
    
</Window>
